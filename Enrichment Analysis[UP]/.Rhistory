qvalueCutoff = 0.05,
minGSSize = 10,
maxGSSize = 500,
readable = T)
# [4] Category Netplot:
cnetplot(ego_MF,circular = TRUE, colorEdge = TRUE)
barplot(ego_MF, showCategory = 10)
gene_names <-  read.table("Overlapped_up_DEGs.txt")
names(gene_names)[1] = "SYMBOL"
hs <- org.Hs.eg.db
my.symbols <- gene_names$SYMBOL
IDs<- AnnotationDbi::select(hs,
keys = my.symbols,
columns = c("ENSEMBL", "SYMBOL"),
keytype = "SYMBOL")
geneID <- gene_names$SYMBOL
length(geneID)
##  decreasing order
geneID = sort(geneID, decreasing = TRUE)
geneID <- IDs$SYMBOL
IDs<- AnnotationDbi::select(hs,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
geneID <- IDs$ENTREZID
length(geneID)
##  decreasing order
geneID = sort(geneID, decreasing = TRUE)
ego_MF <- enrichGO(gene = geneID,
keyType = "ENTREZID",
ont = "MF" ,
OrgDb = org.Hs.eg.db,
pAdjustMethod= "fdr",
qvalueCutoff = 0.05,
minGSSize = 10,
maxGSSize = 500,
readable = T)
barplot(ego_MF, showCategory = 10)
dotMF <- dotplot(ego_MF, showCategory = 10)
ego_Bp <- enrichGO(gene = geneID,
keyType = "ENTREZID",
ont = "BP",
OrgDb = org.Hs.eg.db,
pAdjustMethod= "fdr",
qvalueCutoff = 0.05,
minGSSize = 10,
maxGSSize = 500,
readable = T)
barplot(ego_Bp, showCategory = 10)
dotBp <- dotplot(ego_Bp, showCategory = 10)
ego_Bpx2 <- pairwise_termsim(ego_Bp)
em_BP <- emapplot(ego_Bpx2, showCategory = 10)
# [4] Category Netplot:
cnetplot(ego_Bp,circular = TRUE, colorEdge = TRUE)
summary(ego_Bp)[1:10,1:8]
# [5] Selecting high count sets
top.Bp <- as.data.frame(ego_Bp)
top.Bp<- subset(top.Bp, Count>10)
top.Bp[1:5, 1:6]
ggplot(top.Bp, aes(y = Description, x = GeneRatio, color= p.adjust , size =Count)) +
geom_point(aes(color = p.adjust), alpha = 1.0) +
scale_colour_gradient(low="blue", high="red")+
theme(panel.grid.major = element_line(color = "steelblue4", size = 0.5, linetype = "dotted",),
panel.background = element_rect(fill = "white"),
panel.border = element_rect( fill = NA) #linetype = "dashed"
)
ego_CC <- enrichGO(gene = geneID,
keyType = "ENTREZID",
OrgDb = org.Hs.eg.db,
ont = "CC",
pAdjustMethod= "fdr",
qvalueCutoff = 0.05,
minGSSize = 10,
maxGSSize = 500,
readable = T)
# [1] Bar Plot
barplot(ego_CC, showCategory = 10)
# [2] Dot Plot
dotcc <- dotplot(ego_CC, showCategory = 10)
# [3] Encrichment map:
ego_CCx2 <- pairwise_termsim(ego_CC)
em_CC <- emapplot(ego_CCx2, showCategory = 10)
# [4] Category Netplot:
cnetplot(ego_CC,circular = TRUE, colorEdge = TRUE)
# [5] Selecting high count sets
head(summary(ego_CC))
top.CC <- as.data.frame(ego_CC)
top.CC<- subset(top.CC, Count>10)
top.CC[1:5, 1:6]
ggplot(top.CC, aes(y = Description, x = GeneRatio, color= p.adjust , size =Count)) +
geom_point(aes(color = p.adjust), alpha = 1.0) +
scale_colour_gradient(low="blue", high="red")+
theme(panel.grid.major = element_line(color = "steelblue4", size = 0.5, linetype = "dotted",),
panel.background = element_rect(fill = "white"),
panel.border = element_rect( fill = NA) #linetype = "dashed"
)
gene_names <-  read.table("Overlapped_up_DEGs.txt")
names(gene_names)[1] = "SYMBOL"
hs <- org.Hs.eg.db
my.symbols <- gene_names$SYMBOL
IDs<- AnnotationDbi::select(hs,
keys = my.symbols,
columns = c("ENSEMBL", "SYMBOL"),
keytype = "SYMBOL")
geneID <- IDs$ENSEMBL
length(geneID)
##  decreasing order
geneID = sort(geneID, decreasing = TRUE)
ego_MF <- enrichGO(gene = geneID,
keyType = "ENSEMBL", #ENSEMBL
ont = "MF" ,
OrgDb = org.Hs.eg.db,
pAdjustMethod= "fdr",
qvalueCutoff = 0.05,
minGSSize = 10,
maxGSSize = 500,
readable = T)
barplot(ego_MF, showCategory = 10)
dotMF <- dotplot(ego_MF, showCategory = 10)
ego_MFx2 <- pairwise_termsim(ego_MF)
em_MF <- emapplot(ego_MFx2, showCategory = 10)
# [4] Category Netplot:
cnetplot(ego_MF,circular = TRUE, colorEdge = TRUE)
summary(ego_MF)
# [5] Selecting high count sets
top.MF <- as.data.frame(ego_MF)
top.MF <- subset(top.MF, Count>5)
top.MF [1:5, 1:6]
top.MF
top.MF [1:5, 1:6]
top.MF [1:10, 1:6]
top.CC[1:10, 1:6]
cowplot::plot_grid(dotBp, dotcc, dotMF, ncol=2, labels=LETTERS[1:3])
cowplot::plot_grid(em_BP, em_CC, em_MF, ncol=2, labels=LETTERS[1:3])
cowplot::plot_grid(em_BP, em_CC, em_MF, ncol=2, labels=LETTERS[1:3]) # [4] Category Netplot: cnetplot(ego_MF)
# [4] Category Netplot:
circ_MF <- cnetplot(ego_MF,circular = TRUE, colorEdge = TRUE)
# [4] Category Netplot:
circ_Bp <- cnetplot(ego_Bp,circular = TRUE, colorEdge = TRUE)
# [4] Category Netplot:
circ_CC <- cnetplot(ego_CC,circular = TRUE, colorEdge = TRUE)
cowplot::plot_grid(circ_BP, circ_CC, circ_MF, ncol=2, labels=LETTERS[1:3]) # [4] Category Netplot: cnetplot(ego_MF)
# [4] Category Netplot:
circ_Bp <- cnetplot(ego_Bp,circular = TRUE, colorEdge = TRUE)
cowplot::plot_grid(circ_BP, circ_CC, circ_MF, ncol=2, labels=LETTERS[1:3]) # [4] Category Netplot: cnetplot(ego_MF)
cowplot::plot_grid(circ_Bp, circ_CC, circ_MF, ncol=2, labels=LETTERS[1:3]) # [4] Category Netplot: cnetplot(ego_MF)
cowplot::plot_grid(circ_Bp, circ_CC, circ_MF, ncol=2, labels=LETTERS[1:3]) # [4] Category Netplot: cnetplot(ego_MF)
# Get the GO annotations for the DEGs
eg2go_hs <- enrichGO(gene          = geneID,
keyType = "ENSEMBL",
OrgDb         = org.Hs.eg.db,
ont           = "ALL",
pAdjustMethod = "fdr",
pvalueCutoff  = 0.05,
qvalueCutoff = 0.05,
readable      = TRUE,
minGSSize = 10,
maxGSSize = 500,)
# [5] Selecting high count sets
top.egoAll <- as.data.frame(eg2go_hs)
summary(top.egoAll$Count)
dim(top.egoAll)
top.egoAll <- subset(top.egoAll, Count>7)
summary(top.egoAll$Count)
dim(top.egoAll)
top.egoAll [1:5, 1:6]
ggplot(top.egoAll, aes(y = Description, x = ONTOLOGY, color= p.adjust , size =Count)) +
geom_point(aes(color = p.adjust), alpha = 1.0) +
scale_colour_gradient(low="blue", high="red")+
theme(panel.grid.major = element_line(color = "steelblue4", size = 0.5, linetype = "dotted",),
panel.background = element_rect(fill = "white"),
panel.border = element_rect( fill = NA) #linetype = "dashed"
)
dotMF <- dotplot(ego_MF, showCategory = 10)
dotMF
top.MF <- subset(top.MF, Count>7)
top.MF [1:10, 1:6]
ggplot(top.MF, aes(y = Description, x = GeneRatio, color= p.adjust , size =Count)) +
geom_point(aes(color = p.adjust), alpha = 1.0) +
scale_colour_gradient(low="blue", high="red")+
theme(panel.grid.major = element_line(color = "steelblue4", size = 0.5, linetype = "dotted",),
panel.background = element_rect(fill = "white"),
panel.border = element_rect( fill = NA) #linetype = "dashed"
)
top.egoAll <- subset(top.egoAll, Count>8)
summary(top.egoAll$Count)
dim(top.egoAll)
top.egoAll [1:5, 1:6]
ggplot(top.egoAll, aes(y = Description, x = ONTOLOGY, color= p.adjust , size =Count)) +
geom_point(aes(color = p.adjust), alpha = 1.0) +
scale_colour_gradient(low="blue", high="red")+
theme(panel.grid.major = element_line(color = "steelblue4", size = 0.5, linetype = "dotted",),
panel.background = element_rect(fill = "white"),
panel.border = element_rect( fill = NA) #linetype = "dashed"
)
top.egoAll <- subset(top.egoAll, Count>10)
summary(top.egoAll$Count)
dim(top.egoAll)
top.egoAll [1:5, 1:6]
ggplot(top.egoAll, aes(y = Description, x = ONTOLOGY, color= p.adjust , size =Count)) +
geom_point(aes(color = p.adjust), alpha = 1.0) +
scale_colour_gradient(low="blue", high="red")+
theme(panel.grid.major = element_line(color = "steelblue4", size = 0.5, linetype = "dotted",),
panel.background = element_rect(fill = "white"),
panel.border = element_rect( fill = NA) #linetype = "dashed"
)
gene_names <-  read.table("Overlapped_up_DEGs.txt")
names(gene_names)[1] = "SYMBOL"
hs <- org.Hs.eg.db
my.symbols <- gene_names$SYMBOL
IDs<- AnnotationDbi::select(hs,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
geneID <- IDs$ENTREZID
length(geneID)
##  decreasing order
geneID = sort(geneID, decreasing = TRUE)
kk <- enrichKEGG(gene = geneID,
organism = "hsa",
keyType = "ENTREZID",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = FALSE)
kk <- enrichKEGG(gene = geneID,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = FALSE)
kk <- enrichKEGG(gene = geneID,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = TRUE)
install.packages("KEGG.db")
BiocManager::install("KEGG.db")
library("KEGG.db")
library(KEGG.db)
library(KEGG)
kk <- enrichKEGG(gene = geneID,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = TRUE)
library(KEGG.db)
biocLite("KEGG.db")
kk <- enrichKEGG(gene = geneID,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = F)
kk <- enrichKEGG(gene = geneID,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = F)
kk2 <- setReadable(kk, OrgDb = org.Hs.eg.db, keyType = "ENTREZID")
head(summary(kk))
pairwise_termsim(kk)
#[1]
barplot(kk, showCategory = 10)
kk <- enrichKEGG(gene = geneID,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = F)
View(kk)
kk <- enrichKEGG(gene = geneID,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = F)
kk
hs <- org.Hs.eg.db
my.symbols <- gene_names$SYMBOL
IDs<- AnnotationDbi::select(hs,
keys = my.symbols,
columns = c("ENSEMBL", "SYMBOL"),
keytype = "SYMBOL")
geneID <- IDs$ENSEMBL
length(geneID)
kk <- enrichKEGG(gene = geneID,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = F)
IDs<- AnnotationDbi::select(hs,
keys = my.symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
geneID <- IDs$ENTREZID
kk <- enrichKEGG(gene = geneID,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = F)
kk
kk <- enrichKEGG(gene = geneID,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = T)
BiocManager::install("KEGGREST")
BiocManager::install("KEGGREST",force = TRUE)
library(KEGGREST)
kk <- enrichKEGG(gene = geneID,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = T)
library(topGO)
kk <- enrichKEGG(gene = uni,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = T)
kk <- enrichKEGG(gene = uni,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = F)
uniIDs<- AnnotationDbi::select(hs,
keys = uni,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
uni <- uniIDs$ENTREZID
length(geneID)
length(uni)
kk <- enrichKEGG(gene = uni,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = F)
kk
kk2 <- setReadable(kk, OrgDb = org.Hs.eg.db, keyType = "ENTREZID")
head(summary(kk))
kk3 <- gseKEGG(geneList     = geneID,
keyType = "kegg",
organism     = 'hsa',
pAdjustMethod = "BH",
nPerm        = 1000,
minGSSize    = 120,
pvalueCutoff = 0.05,
verbose      = FALSE)
##  decreasing order
geneID = sort(geneID, decreasing = TRUE)
kk3 <- gseKEGG(geneList     = geneID,
keyType = "kegg",
organism     = 'hsa',
pAdjustMethod = "BH",
nPerm        = 1000,
minGSSize    = 120,
pvalueCutoff = 0.05,
verbose      = FALSE)
DAVI <- enrichDAVID(geneList   = geneID,
idType = "ENTREZ_GENE_ID",
minGSSize = 10,
maxGSSize = 500,
annotation = "GOTERM_BP_FAT",
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
qvalueCutoff = 0.5,
species = NA,
david.user
)
DAVI <- enrichDAVID(geneID,
idType = "ENTREZ_GENE_ID",
minGSSize = 10,
maxGSSize = 500,
annotation = "GOTERM_BP_FAT",
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
qvalueCutoff = 0.5,
species = NA,
david.user
)
BiocManager::install("RDAVIDWebService")
BiocManager::install("RDAVIDWebService",force = TRUE)
remove(kk)
remove(kk2)
kk <- enrichKEGG(gene = geneID,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = F)
kk
kk <- enrichKEGG(gene = geneID,
organism = "hsa",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.05,
use_internal_data = T)
library(topGO)
library(ALL)
install.packages("ALL")
gene_names <-  read.table("Overlapped_up_DEGs.txt")
View(gene_names)
data(EC) # Get a glimpse of the data format of the results of the functional analysis... head(EC$david)
ans.kegg <- enrichKEGG(gene = geneID,
organism = 'hsa',
universe = geneUniverse,
pvalueCutoff = 0.05)
ans.kegg <- enrichKEGG(gene = geneID,
organism = 'hsa',
pvalueCutoff = 0.05)
ans.kegg
BiocManager::install("ALL")
library(ALL)
data(EC) # Get a glimpse of the data format of the results of the functional analysis... head(EC$david)
data(ALL)
data(geneList)
ALL
geneList
affyLib <- paste(annotation(ALL), "db", sep = ".")
library(package = affyLib, character.only = TRUE)
BiocManager::install("hgu95av2.db")
library(hgu95av2.db)
affyLib <- paste(annotation(ALL), "db", sep = ".")
library(package = affyLib, character.only = TRUE)
sum(topDiffGenes(geneList))
sampleGOdata <- new("topGOdata",
+ description = "Simple session", ontology = "BP",
sampleGOdata <- new("topGOdata",
+ description ="Simple session", ontology = "BP",
sampleGOdata <- new("topGOdata",
+ "Simple session", ontology = "BP",
+ allGenes = geneList, geneSel = topDiffGenes,
sampleGOdata <- new("topGOdata",
+ "Simple session", ontology = "BP",
+ geneList, geneSel = topDiffGenes,
+ nodeSize = 10,
sampleGOdata <- new("topGOdata",
+ "Simple session", ontology = "BP",
+ geneList, geneSel = topDiffGenes,
+ 10,
+ annot = annFUN.db, affyLib = affyLib)
sampleGOdata <- new("topGOdata",
+ "Simple session", ontology = "BP",
+ geneList, geneSel = topDiffGenes,
+ 10,
+ annFUN.db, affyLib = affyLib)
geneID
write(geneID,"genes.txt")
gene_names
write(gene_names$up_names,"genes.txt")
